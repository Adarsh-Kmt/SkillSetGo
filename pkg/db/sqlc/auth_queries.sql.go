// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: auth_queries.sql

package sqlc

import (
	"context"
)

const authenticateCompany = `-- name: AuthenticateCompany :one
SELECT company_id from company_table where username = $1 and password = $2
`

type AuthenticateCompanyParams struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

func (q *Queries) AuthenticateCompany(ctx context.Context, arg AuthenticateCompanyParams) (int32, error) {
	row := q.db.QueryRow(ctx, authenticateCompany, arg.Username, arg.Password)
	var company_id int32
	err := row.Scan(&company_id)
	return company_id, err
}

const authenticateStudent = `-- name: AuthenticateStudent :one
SELECT student_id from student_table where usn = $1 and password = $2
`

type AuthenticateStudentParams struct {
	Usn      string `json:"usn"`
	Password string `json:"password"`
}

func (q *Queries) AuthenticateStudent(ctx context.Context, arg AuthenticateStudentParams) (int32, error) {
	row := q.db.QueryRow(ctx, authenticateStudent, arg.Usn, arg.Password)
	var student_id int32
	err := row.Scan(&student_id)
	return student_id, err
}
